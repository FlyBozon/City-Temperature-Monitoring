services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      # prosty test TCP: czy port 2181 jest otwarty
      test: ["CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/2181'"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 20s

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20

  spark:
    build:
      context: .
      dockerfile: spark.Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SPARK_MODE: driver
      KAFKA_BOOTSTRAP: kafka:9092
      KAFKA_TOPIC: city-temperatures
      OUTPUT_DIR: /data/output
    volumes:
      - ./spark_app:/opt/bitnami/spark/app
      - ./shared/output:/data/output
    ports:
      - "4040:4040"
    command:
      - /bin/bash
      - -lc
      - |
        /opt/bitnami/spark/bin/spark-submit \
          --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.2 \
          --master local[2] \
          /opt/bitnami/spark/app/spark_streaming.py
    restart: unless-stopped

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: city-temperatures
    restart: unless-stopped
